"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var chrome_debugging_domain_1 = require("../chrome-debugging-domain");
var RuntimeDomain = (function (_super) {
    __extends(RuntimeDomain, _super);
    function RuntimeDomain() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    // methods
    RuntimeDomain.prototype.evaluate = function (params) {
        return this.send('evaluate', params);
    };
    RuntimeDomain.prototype.awaitPromise = function (params) {
        return this.send('awaitPromise', params);
    };
    RuntimeDomain.prototype.callFunctionOn = function (params) {
        return this.send('callFunctionOn', params);
    };
    RuntimeDomain.prototype.getProperties = function (params) {
        return this.send('getProperties', params);
    };
    RuntimeDomain.prototype.releaseObject = function (params) {
        return this.send('releaseObject', params);
    };
    RuntimeDomain.prototype.releaseObjectGroup = function (params) {
        return this.send('releaseObjectGroup', params);
    };
    RuntimeDomain.prototype.runIfWaitingForDebugger = function () {
        return this.send('runIfWaitingForDebugger');
    };
    RuntimeDomain.prototype.enable = function () {
        return this.send('enable');
    };
    RuntimeDomain.prototype.disable = function () {
        return this.send('disable');
    };
    RuntimeDomain.prototype.discardConsoleEntries = function () {
        return this.send('discardConsoleEntries');
    };
    RuntimeDomain.prototype.compileScript = function (params) {
        return this.send('compileScript', params);
    };
    RuntimeDomain.prototype.runScript = function (params) {
        return this.send('runScript', params);
    };
    // events
    RuntimeDomain.prototype.executionContextCreated = function (cb) {
        return this.addListener('executionContextCreated', cb);
    };
    RuntimeDomain.prototype.executionContextDestroyed = function (cb) {
        return this.addListener('executionContextDestroyed', cb);
    };
    RuntimeDomain.prototype.executionContextsCleared = function (cb) {
        return this.addListener('executionContextsCleared', cb);
    };
    RuntimeDomain.prototype.exceptionThrown = function (cb) {
        return this.addListener('exceptionThrown', cb);
    };
    RuntimeDomain.prototype.exceptionRevoked = function (cb) {
        return this.addListener('exceptionRevoked', cb);
    };
    RuntimeDomain.prototype.consoleAPICalled = function (cb) {
        return this.addListener('consoleAPICalled', cb);
    };
    RuntimeDomain.prototype.inspectRequested = function (cb) {
        return this.addListener('inspectRequested', cb);
    };
    return RuntimeDomain;
}(chrome_debugging_domain_1.ChromeDebuggingDomain));
exports.RuntimeDomain = RuntimeDomain;
//# sourceMappingURL=runtime.js.map