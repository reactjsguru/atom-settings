export declare class ChromeDebuggingProtocolPlugin {
    options: Object;
    name: String;
    iconPath: String;
    pluginClient: any;
    launcher: any;
    debugger: any;
    private isConsoleEnabled;
    normalizePath(dir: string, verify?: boolean): Promise<string>;
    register(pluginClient: any): void;
    enableConsole(): void;
    disableConsole(): void;
    didLaunchError(message: string): void;
    addEventListeners(): void;
    activateFirstFrame(callFrames: Array<any>): void;
    addBreakpointsForScript(script: any): void;
    didStop(): Promise<void>;
    didResume(): Promise<any>;
    didPause(): Promise<any>;
    didAddBreakpoint(filePath: any, lineNumber: any, condition: any): Promise<any>;
    didChangeBreakpoint(filePath: any, lineNumber: any, condition: any): Promise<void>;
    didRemoveBreakpoint(filePath: any, lineNumber: any): Promise<any>;
    didStepOver(): Promise<any>;
    didStepInto(): Promise<void>;
    didStepOut(): Promise<void>;
    didRequestProperties(request: any, propertyView: any): Promise<void>;
    didEvaluateExpression(expression: string, evaluationView: any): Promise<void>;
}
